<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Puppet on clburlison</title>
    <link>https://clburlison.com/tags/puppet/</link>
    <description>Recent content in Puppet on clburlison</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>clburlison@gmail.com (Clayton Burlison)</managingEditor>
    <webMaster>clburlison@gmail.com (Clayton Burlison)</webMaster>
    <copyright>(c) 2014 - 2017 Clayton Burlison</copyright>
    <lastBuildDate>Wed, 27 May 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://clburlison.com/tags/puppet/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuration Management</title>
      <link>https://clburlison.com/configuration-management/</link>
      <pubDate>Wed, 27 May 2015 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/configuration-management/</guid>
      <description>Intro This is part one in a four part series on using Puppet on OS X. However to understand my move to Puppet I wanted to share my thoughts on Configuration Management (CM) in general.
For the last five months, I have been seriously questioning my deployment/management process. Even with Munki&amp;rsquo;s native support for configuration profiles in v2.2.4, it has always seemed like I was creating extra work for myself.</description>
    </item>
    
    <item>
      <title>Puppet Module desktop picture</title>
      <link>https://clburlison.com/puppet-module-desktoppicture/</link>
      <pubDate>Tue, 10 Feb 2015 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/puppet-module-desktoppicture/</guid>
      <description>Intro I have been using puppet in one way or another since April of 2014. My first introduction to puppet was boxen but up until recently I have only focused on how puppet can apply to me personally. With this module and a few ideas I have for the future this is going to change the way clients are configured at $work_place.
Now this technically is not my first module it is the first module that I have created the logic and wrote entirely myself.</description>
    </item>
    
    <item>
      <title>Things learned from boxen</title>
      <link>https://clburlison.com/things-learned-from-boxen/</link>
      <pubDate>Thu, 24 Apr 2014 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/things-learned-from-boxen/</guid>
      <description>What is boxen? So odds are if you have landed on this page you have probably already heard of boxen. For those who have not heard yet, boxen is an open source project created by the good people at github.com as a way to quickly setup a Macintosh computer. Boxen can also be used as a way to keep certain settings managed between two or more devices. Think for a second, your laptop goes with you everywhere and along with that you have all of your custom shell scripts, shell alias, ssh keys, etc.</description>
    </item>
    
    <item>
      <title>Setting up a puppetmaster on Mavericks</title>
      <link>https://clburlison.com/setting-up-a-puppetmaster-on-mavericks/</link>
      <pubDate>Fri, 04 Apr 2014 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/setting-up-a-puppetmaster-on-mavericks/</guid>
      <description>For various reasons I decided to set up my puppetmaster on an OS X install of Mavericks instead of what I would consider the norm, being a linux distro. Here are the results. This documentation is strongly based on the article by Nate Walck on afp548.com.
Notice: I do not use these instructions any longer. The setup of a puppetmaster on OS X Server was just for testing purposes.</description>
    </item>
    
  </channel>
</rss>