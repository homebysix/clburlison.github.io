<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on clburlison</title>
    <link>https://clburlison.com/tags/automation/</link>
    <description>Recent content in Automation on clburlison</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>clburlison@gmail.com (Clayton Burlison)</managingEditor>
    <webMaster>clburlison@gmail.com (Clayton Burlison)</webMaster>
    <copyright>(c) 2014 - 2017 Clayton Burlison</copyright>
    <lastBuildDate>Wed, 18 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://clburlison.com/tags/automation/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Zendesk Automation for Mail</title>
      <link>https://clburlison.com/zendesk-automation-for-mail/</link>
      <pubDate>Wed, 18 Jan 2017 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/zendesk-automation-for-mail/</guid>
      <description>Intro Before I get into the material of this post I want to refer you to an article written last week by Sal Soghoian, click here. The information that he provides regarding user automation is exactly what makes the process described in this post possible.
In case you are not aware, Zendesk is a web-based helpdesk application that is cloud hosted and quite popular. They have an email API that allows agents to create a ticket with a simple email.</description>
    </item>
    
    <item>
      <title>Slack rsync</title>
      <link>https://clburlison.com/slack-rsync/</link>
      <pubDate>Mon, 16 Nov 2015 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/slack-rsync/</guid>
      <description>With a little push from @groob, I have created a simple python script that runs a rsync command and sends a summary of the run to Slack. Slack was not created to be a storage vault for server logs however it does great for short sms style messages. If you are using a log collection service like logstash you could extend on this script to include the link to your uploaded log or if an error occurs you could automatically create a helpdesk ticket for you to investigate the issue.</description>
    </item>
    
    <item>
      <title>Configuration Management</title>
      <link>https://clburlison.com/configuration-management/</link>
      <pubDate>Wed, 27 May 2015 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/configuration-management/</guid>
      <description>Intro This is part one in a four part series on using Puppet on OS X. However to understand my move to Puppet I wanted to share my thoughts on Configuration Management (CM) in general.
For the last five months, I have been seriously questioning my deployment/management process. Even with Munki&amp;rsquo;s native support for configuration profiles in v2.2.4, it has always seemed like I was creating extra work for myself.</description>
    </item>
    
    <item>
      <title>Automator is not dead yet</title>
      <link>https://clburlison.com/automator-is-not-dead-yet/</link>
      <pubDate>Sat, 16 May 2015 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/automator-is-not-dead-yet/</guid>
      <description>Intro Automator is unique in its ability of creating &amp;ldquo;automation&amp;rdquo; via the usage of a graphical tasked based workflow. Most other tools that I use for automation are command line driven. So what can you do that&amp;rsquo;s so amazing?
 Create applications. No really Automator has the ability to create a .app. Create services. The ability to directly apply changes inside of applications. It is easy! No advanced computer skills are needed, however scripting languages are a great addition.</description>
    </item>
    
    <item>
      <title>Puppet Module desktop picture</title>
      <link>https://clburlison.com/puppet-module-desktoppicture/</link>
      <pubDate>Tue, 10 Feb 2015 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/puppet-module-desktoppicture/</guid>
      <description>Intro I have been using puppet in one way or another since April of 2014. My first introduction to puppet was boxen but up until recently I have only focused on how puppet can apply to me personally. With this module and a few ideas I have for the future this is going to change the way clients are configured at $work_place.
Now this technically is not my first module it is the first module that I have created the logic and wrote entirely myself.</description>
    </item>
    
  </channel>
</rss>