<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Munki on clburlison</title>
    <link>https://clburlison.com/tags/munki/</link>
    <description>Recent content in Munki on clburlison</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>clburlison@gmail.com (Clayton Burlison)</managingEditor>
    <webMaster>clburlison@gmail.com (Clayton Burlison)</webMaster>
    <copyright>(c) 2014 - 2017 Clayton Burlison</copyright>
    <lastBuildDate>Mon, 24 Aug 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://clburlison.com/tags/munki/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Import Logic Pro X Audio Content</title>
      <link>https://clburlison.com/import-logic-pro-x/</link>
      <pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/import-logic-pro-x/</guid>
      <description>Updated for Logic 10.2.0 - September 18th, 2015
This script has been updated to support Logic Pro 10.2.0. This release included many additional audio libraries for the added Alchemy Plugin. The updated script from Hannes will now download audio content to a &amp;ldquo;__Downloaded Items&amp;rdquo; directory and create hard links to Apple&amp;rsquo;s categories.
 Today I needed to import 60 packages (37 GB) of audio content for Logic Pro X into my Munki repo.</description>
    </item>
    
    <item>
      <title>Setup Munkireport on Ubuntu 14.04 - Part 3</title>
      <link>https://clburlison.com/munkirepo-guide-part-3/</link>
      <pubDate>Thu, 23 Oct 2014 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/munkirepo-guide-part-3/</guid>
      <description>Ubuntu 16.04/ PHP 7: Lucas Hall has created an updated guide based off of this one that uses Ubuntu 16.04 with PHP 7, which can be viewed here.
 Intro Welcome to the third part in our munki server setup series. In this section, we will download and configure Munkireport-php on our munki server.
Before we get to far you might want to head over to Part 1 - Setting up the munki repo or Part 2 - Setting up mandrill.</description>
    </item>
    
    <item>
      <title>Setup Mandrill on Ubuntu 14.04 - Part 2</title>
      <link>https://clburlison.com/munkirepo-guide-part-2/</link>
      <pubDate>Fri, 17 Oct 2014 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/munkirepo-guide-part-2/</guid>
      <description>Update: This article should only be used for reference at this time. Mandrill has been great for many years but no longer has an active maintainer. Please use MunkiWebAdmin 2 (mwa2) from github.com/munki/mwa2 instead.
 Intro This is Part 2 of a series on setting up a munki server on Ubuntu 14.04. Read Part 1 here. This section goes over setting up Mandrill so we can edit our repo metadata files, modify manifests, and assign new software to our fleet using a web browser.</description>
    </item>
    
    <item>
      <title>Setup a Munki repo on Ubuntu 14.04 - Part 1</title>
      <link>https://clburlison.com/munkirepo-guide-part-1/</link>
      <pubDate>Mon, 06 Oct 2014 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/munkirepo-guide-part-1/</guid>
      <description>Intro As you might have guessed from my previous post, I am trying to standardize at work. Part of this was to move many core OS X services away from OS X Server and towards Ubuntu. This will allow us to use our existing virtualization infrastructure. After reposado the next big service was our munki repo.
Munki is a very powerful open source tool for patch management and software updates for OS X clients.</description>
    </item>
    
    <item>
      <title>Show Help Desk Information</title>
      <link>https://clburlison.com/show-helpdesk-info/</link>
      <pubDate>Mon, 14 Jul 2014 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/show-helpdesk-info/</guid>
      <description>Display useful information on your Desktop using Geektool. Make troubleshooting network issues for your end users easier. Find your hostname faster. The amount of useful information is limitless. If you can script it&amp;hellip;you can display it.
 My geektools results.   Introduction Firstly, I take no credit for this valuable resource. All credit should go to Erik Gomez from the munki-dev mailing list. All I have done is modified the script to work in my environment.</description>
    </item>
    
    <item>
      <title>Creating a development munki_repo</title>
      <link>https://clburlison.com/creating-a-development-munki-repo/</link>
      <pubDate>Sat, 17 May 2014 00:00:00 +0000</pubDate>
      <author>clburlison@gmail.com (Clayton Burlison)</author>
      <guid>https://clburlison.com/creating-a-development-munki-repo/</guid>
      <description>Outdated: These instructions are no longer current and are considered deprecated. This document remains for historical reasons only. Faster and easier methods exist for creating development environments.
 I created a vagrant box that allows you create a completely self contained munki_repo for testing purposes. With the usage of PuPHPet the process was quite easy.
This article describes basic usage and setup for the project munki.dev.
Purpose Setting up and maintaining a web server can be a pretty complex job.</description>
    </item>
    
  </channel>
</rss>